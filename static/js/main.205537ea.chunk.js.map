{"version":3,"sources":["components/TodosFilter.js","components/TodoItem.js","components/MarkAll.js","components/TodoList.js","TodoApp.js","index.js"],"names":["TodoFilter","_this","this","react_default","a","createElement","className","style","display","props","left","href","onClick","displayChanged","type","React","Component","TodoItem","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","completedChanged","bind","assertThisInitialized","removeClicked","event","statusChanged","item","id","target","checked","itemRemoved","preventDefault","completed","onChange","htmlFor","title","MarkAll","changed","TodoList","state","input","nextId","items","newItemChanged","newItemKeyDown","markAllChanged","setState","value","key","trim","newItem","concat","toConsumableArray","itemId","newItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","push","err","return","filter","displayType","map","_this2","placeholder","onKeyDown","MarkAll_MarkAll","every","TodoItem_TodoItem","TodosFilter_TodoFilter","length","TodoApp","TodoList_TodoList","ReactDOM","render","TodoApp_TodoApp","document","getElementById"],"mappings":"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","file":"static/js/main.205537ea.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class TodoFilter extends React.Component {\r\n    render () {\r\n    return(    \r\n        <footer className=\"footer\" style={{ display: 'block' }}>\r\n          <span className=\"todo-count\">\r\n            {this.props.left} items left\r\n          </span>\r\n\r\n          {/* <span className =\"\">\r\n            {['all', 'active', 'completed'].map(item =>\r\n            <span classNmame={this.props.display === item ? 'selected' : ''}\r\n            onClick={() => this.props.displayChanged(item)}>{item}    </span>\r\n\r\n            )\r\n\r\n            }\r\n            </span>    */}\r\n\r\n          <ul className=\"filters\">\r\n            <li>\r\n             <a href=\"#/\" className={this.props.display === 'all' ? 'selected' : ''}\r\n              onClick={() => this.props.displayChanged('all')}>All</a>\r\n            </li>\r\n  \r\n            <li>\r\n              <a href=\"#/active\" className={this.props.display === 'active' ? 'selected' : ''\r\n            } onClick={() => this.props.displayChanged('active')}>Active</a>\r\n            </li>\r\n  \r\n            <li>\r\n              <a href=\"#/completed\" className={this.props.display === 'completed' ? 'selected' : ''}\r\n              onClick={() => this.props.displayChanged('completed')}>Completed</a>\r\n            </li>\r\n          </ul>\r\n  \r\n          <button\r\n            type=\"button\"\r\n            className=\"clear-completed\"\r\n            style={{ display: 'block' }}\r\n          />\r\n        </footer>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './TodoItem.css';\r\n\r\nexport default class TodoItem extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.completedChanged = this.completedChanged.bind(this);\r\n      this.removeClicked = this.removeClicked.bind(this);\r\n    }\r\n    \r\n    completedChanged(event) {\r\n      this.props.statusChanged(this.props.item.id, event.target.checked);\r\n    }\r\n\r\n    removeClicked(event) {\r\n      this.props.itemRemoved(this.props.item.id);\r\n      event.preventDefault(); \r\n    }\r\n\r\n    render () {\r\n        return(    \r\n      <li className=\"\">\r\n      <div className=\"view\">\r\n        <input type=\"checkbox\" className=\"toggle\" id=\"todo-1\" checked={this.props.item.completed} onChange={this.completedChanged} />\r\n        <label htmlFor=\"todo-1\" onChange={this.completedChanged}><span className={this.props.item.completed ? 'completed' : 'active'} >{this.props.item.title}</span></label>\r\n        <button type=\"button\" className=\"destroy\" onClick={this.removeClicked} />\r\n      </div>\r\n    </li>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default class MarkAll extends React.Component {\r\n    render () {\r\n    return(    \r\n        <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" checked={this.props.checked} \r\n          onChange={event => this.props.changed(event.target.checked)} />\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport TodosFilter from './TodosFilter';\r\nimport TodoItem from './TodoItem';\r\nimport MarkAll from './MarkAll';\r\n\r\nexport default class TodoList extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      input: '',\r\n      nextId: 1,\r\n      items: []      \r\n    };\r\n    this.newItemChanged = this.newItemChanged.bind(this);\r\n    this.newItemKeyDown = this.newItemKeyDown.bind(this);\r\n    this.statusChanged = this.statusChanged.bind(this);\r\n    this.itemRemoved = this.itemRemoved.bind(this);\r\n    this.markAllChanged = this.markAllChanged.bind(this);\r\n    this.displayChanged = this.displayChanged.bind(this);\r\n      }\r\n\r\n  newItemChanged(event) {\r\n    this.setState(\r\n      {input: event.target.value}\r\n    );\r\n  }\r\n\r\n  newItemKeyDown(event) {\r\n    if (event.key === 'Enter' && this.state.input.trim() !== '') {\r\n      this.setState((state) => {\r\n        const newItem = {\r\n          title: state.input,\r\n            id: state.nextId,\r\n            completed: false\r\n        };\r\n        const newItems = [...state.items, newItem];\r\n        \r\n        return {\r\n          items: newItems,\r\n          nextId: state.nextId + 1,\r\n          input: ''\r\n        };\r\n        });\r\n      \r\n    }\r\n  }\r\n\r\n    statusChanged(itemId, completed) {\r\n      this.setState((state) => {\r\n        const newItems = [];\r\n        for (const item of state.items) {\r\n          if (item.id === itemId) {\r\n            newItems.push({\r\n              title:item.title,\r\n              id: item.id,\r\n              completed:completed\r\n            });\r\n          } else {\r\n            newItems.push(item);\r\n          }\r\n        }\r\n        return {\r\n          items: newItems\r\n         };\r\n      });\r\n    }\r\n    itemRemoved(itemId) {\r\n      this.setState(state => {\r\n        return {\r\n          items: state.items.filter(item => item.id !== itemId)\r\n        };\r\n      });\r\n    }\r\n\r\n    displayChanged(displayType) {\r\n      this.setState(\r\n        {display: displayType}\r\n      );\r\n    }\r\n\r\n    markAllChanged(checked) {\r\n      this.setState(state => {\r\n        return {\r\n          items: state.items.map(item => {\r\n            return {\r\n              title: item.title,\r\n              id: item.id,\r\n              completed: checked\r\n            };\r\n          })\r\n        };\r\n      });\r\n    }\r\n\r\n    render () {\r\n      //const itemsComponents = [];\r\n      // {this.state.items.filter(item =>\r\n      //   this.state.display === 'all'\r\n      //   || this.state.display === 'completed' && item.completed\r\n      //   || this.state.display === 'active' && !item.completed)\r\n      //   .map(item => <TodoItem key={item.id} item={item} \r\n      //     statusChanged={this.statusChanged} itemRemoved={this.itemRemoved}/>)\r\n\r\n      // }\r\n      \r\n      \r\n      \r\n      \r\n      // for (const item of this.state.items) {\r\n      //   itemsComponents.push(<TodoItem key={item.id} item={item} \r\n      //     statusChanged={this.statusChanged} itemRemoved={this.itemRemoved}/>);\r\n      // }\r\n\r\n      \r\n    return(\r\n    <section className=\"todoapp\">\r\n        <header className=\"header\">\r\n          <h1>Todos</h1>\r\n          <input \r\n            className=\"new-todo\"\r\n            placeholder=\"What needs to be done?\"\r\n            type=\"text\"\r\n            value={this.state.input}\r\n            onChange={this.newItemChanged} onKeyDown={this.newItemKeyDown} />\r\n        </header>\r\n        <section className=\"main\" style={{ display: 'block' }}>\r\n          \r\n\r\n      <MarkAll checked={this.state.items.every(item => item.completed)} changed={this.markAllChanged}/>\r\n\r\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n          <ul className=\"todo-list\">\r\n\r\n          {this.state.items.map(item => <TodoItem key={item.id} item={item} \r\n          statusChanged={this.statusChanged} itemRemoved={this.itemRemoved}/>)\r\n\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    \r\n        </ul>\r\n          \r\n          </section>\r\n          < TodosFilter left={this.state.items.filter(item => !item.completed).length}\r\n                         display={this.state.display} displayChanged={this.displayChanged} \r\n\r\n\r\n                        />\r\n        </section>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport TodoList from './components/TodoList';\r\n\r\nexport default class TodoApp extends React.Component {\r\n  render() {\r\n      return (\r\n    < TodoList />);\r\n      }\r\n    }\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport TodoApp from './TodoApp';\r\n\r\nReactDOM.render(\r\n  <TodoApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}